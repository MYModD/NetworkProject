# FPS協力防衛ゲーム プロジェクト構造

## プロジェクト概要
- **ジャンル**: FPS視点の3Dオンライン協力防衛ゲーム
- **プレイ人数**: 1～4人（マルチプレイヤー対応）
- **プラットフォーム**: Unity + C#
- **技術スタック**: R3, VContainer, UniTask, HDRP, Photon Fusion2

## ディレクトリ構造と機能

### Scripts/ - メインロジック
プロジェクトのコア機能を担当するスクリプト群

#### Core/ - コアシステム
- **Container/**: 依存性注入システム
  - `ProjectInstaller.cs`: VContainerベースのDI設定、システム間の依存関係管理
- `EnemyWaveHandler.cs`: ウェーブベースの敵スポーンシステム、ゲーム進行管理
- `GameFlowHandler.cs`: ゲーム全体のフロー制御、ステート管理
- **Inter/**: インターフェース定義
  - `IGameStateNotice.cs`: ゲーム状態通知インターフェース

#### Character/ - キャラクター関連
- **Animation/**: アニメーションシステム
  - `AnimationConductor.cs`: キャラクターアニメーション制御
- **Camera/**: カメラシステム
  - `PlayerAvatarView.cs`: Cinemachineカメラの優先度制御
- **Input/**: 入力システム
  - `InputManager.cs`: Unity Input Systemを使用したプレイヤー入力管理
  - `GameInput.cs`: 自動生成された入力アクション
  - `PlayerNetworkInput.cs`: ネットワーク入力構造体定義
- **Pys/**: 物理・移動システム
  - `PlayerMovement.cs`: ネットワーク対応プレイヤー移動制御
  - `PlayerMove.cs`: 基本移動機能
  - `PlayerJump.cs`: ジャンプ機能
  - `RotationMove.cs`: 回転制御
  - `PlayerPhysicsMove.cs`: 物理演算対応移動
- **Enemy/**: 敵キャラクターシステム
  - **AI/**: 敵AI制御システム
  - **Combat/**: 戦闘システム
  - **Core/**: 敵の基本クラス群
  - **Spawning/**: 敵スポーンシステム
- `PlayerAvatar.cs`: メインプレイヤーアバターコントローラー
- `ISetPlayerInformation.cs`: プレイヤー情報設定インターフェース

#### NetWork/ - ネットワーク機能
- `GameLauncher.cs`: Photon Fusionセッション管理とプレイヤー接続制御
- `PhotonConnectionTest.cs`: 接続テスト機能、リージョン別接続テスト対応

#### InteractObjectScripts/ - インタラクションシステム
戦艦内設備操作のためのインタラクション機能
- `BaseInteractObject.cs`: インタラクト可能オブジェクトの基底クラス
- `BaseInteractButtonObject.cs`: ボタン型インタラクトオブジェクト
- `IInteractableControllable.cs`: 操縦可能オブジェクトのインターフェース
- `IInteractableButton.cs`: ボタンインタラクションインターフェース
- `InteractiveSwitch.cs`: スイッチ型インタラクションオブジェクト

#### Utility/ - ユーティリティ
- `TransformCalculation.cs`: カメラ基準の移動方向計算
- `GameObjectExtensions.cs`: GameObjectの拡張メソッド群

#### SubEditor/ - エディター拡張
- `RequiredAttribute.cs`: 必須フィールド検証属性

### Scene/ - シーン
- `NetWorkTest.unity`: ネットワーク機能テストシーン
- `NetWorkAnalysisMiyamoto.unity`: ネットワーク分析・デバッグ用シーン
- `PhotoReal.unity`: フォトリアリスティック描画テストシーン
- `OutdoorsScene.unity`: メインゲームシーン

### Prefab/ - プレハブ
- **Character/**: キャラクター関連プレハブ
  - `PlayerAvatar.prefab`: プレイヤーアバタープレハブ
  - **Enemy/**: 敵キャラクタープレハブ
    - `Enemy.prefab`: 基本敵プレハブ
- **Object/**: ゲームオブジェクトプレハブ
  - `Gun.prefab`: 武器プレハブ
- `NetWorkRunner.prefab`: ネットワークランナープレハブ
- `Button.prefab`: インタラクション用ボタンプレハブ
- `MoveObject.prefab`: 移動可能オブジェクトプレハブ

### Photon/ - Photon Fusion2関連
Photon Fusion2の機能とアセット（最新版 Build 920）
- **Fusion/**: メインライブラリ
  - **Runtime/**: ランタイムライブラリ
  - **Editor/**: エディター拡張
  - **Resources/**: ネットワーク設定ファイル
    - `NetworkProjectConfig.fusion`: ネットワークプロジェクト設定
    - `PhotonAppSettings.asset`: Photonアプリケーション設定
  - **CodeGen/**: Fusionコード生成機能
- **FusionDemos/**: サンプルコード
- **FusionMenu/**: メニューシステム
- **PhotonLibs/**: Photonライブラリ群（4.1.8.15対応）
  - **WebSocket/**: WebSocket通信ライブラリ
- **PhotonUnityNetworking/**: Photon Unity Networking設定

### Packages/ - 外部ライブラリ
主要な依存パッケージ
- **R3.1.3.0/**: リアクティブプログラミングライブラリ
- **ObservableCollections.3.3.3/**: 観測可能コレクション
- **ObservableCollections.R3.3.3.3/**: R3統合観測可能コレクション
- **Microsoft.Bcl.AsyncInterfaces.6.0.0/**: 非同期インターフェース
- **Microsoft.Bcl.TimeProvider.8.0.0/**: 時間プロバイダー
- **System.ComponentModel.Annotations.5.0.0/**: コンポーネント注釈
- **System.Runtime.CompilerServices.Unsafe.6.0.0/**: アンセーフランタイム
- **System.Threading.Channels.8.0.0/**: スレッディングチャンネル

### Settings/ - プロジェクト設定
- **HDRP設定**: HDRP Balanced, HDRP High Fidelity
- **HDRPDefaultResources/**: デフォルトリソース
  - `DefaultLookDevProfile.asset`: デフォルトLookDev設定
  - `DefaultSettingsVolumeProfile.asset`: デフォルトボリューム設定

### Editor/ - エディター機能
- `AutoSave.cs`: 自動保存機能（変更検知・プレイモード保存対応）
- `Attribute.cs`: カスタム属性定義

### Animation/ - アニメーション
- **Character/**: キャラクターアニメーション
  - `Player.controller`: プレイヤーアニメーターコントローラー
  - `LookDown.anim`, `LookStreet.anim`: キャラクター視線制御アニメーション
- **Object/**: オブジェクトアニメーション
  - `MoveBox.anim`: 移動ボックスアニメーション
  - `MoveBox.controller`: 移動ボックスアニメーターコントローラー

### Material/ - マテリアル
- `Floor.mat`: 床用マテリアル
- `Switch.mat`: スイッチ用マテリアル
- `Prototype_512x512_Blue1.mat`: プロトタイプ用マテリアル

## 主要機能

### 依存性注入システム
- VContainerベースのDI設定
- `ProjectInstaller`によるシステム間の依存関係管理
- `GameFlowHandler`と`EnemyWaveHandler`のシングルトン登録
- インターフェースベースの疎結合設計

### ゲームフロー管理
- `GameFlowHandler`: ゲーム全体の状態制御
- `EnemyWaveHandler`: ウェーブシステム管理
- `IGameStateNotice`: ゲーム状態通知インターフェース
- ウェーブクリア後の強化・アップグレードシステム基盤

### ネットワーク機能
- Photon Fusion2を使用したマルチプレイヤー対応（最新Build 920）
- ホスト/クライアント/シェアードモード対応
- プレイヤー参加/退出処理
- ネットワーク入力同期
- 自動接続リトライ機能
- リージョン別接続テスト
- インターネット接続状態確認
- セッション管理とプレイヤーオブジェクト制御
- NetworkBehaviourベースのネットワーク同期

### プレイヤーシステム
- FPS視点でのキャラクター操作
- カメラ基準の移動制御
- ジャンプ機能
- ネットワーク同期されたアバター
- アニメーション制御システム
- 物理演算対応移動システム

### 敵システム基盤
- 敵AI制御基盤
- 戦闘システム基盤
- 敵スポーンシステム
- ウェーブ管理システム
- ネットワーク同期対応

### 入力システム
- Unity Input Systemベース
- キーボード・マウス、ゲームパッド対応
- ネットワーク入力として統合
- R3を使用したリアクティブ入力処理

### インタラクションシステム
- 戦艦内設備との相互作用
- 砲台操縦、シールド操作等のベース機能
- ボタン、スイッチ、コントロール可能オブジェクト
- 階層化されたインタラクションインターフェース

### 描画システム
- HDRP (High Definition Render Pipeline) 使用
- フォトリアリスティック描画対応
- 複数の画質設定プロファイル
- ボリューメトリック効果とライティング

### エディター機能
- 自動保存システム（変更検知・プレイモード対応）
- 必須フィールド検証属性
- カスタムエディター拡張

## 開発方針
- var型の使用を避ける
- 適切な粒度でのメソッド分割
- リーダブルコードの原則に従う
- 各行にコメント記述、関数にsummary記述
- 既存コード設計の一貫性を保つ
- R3を活用したリアクティブプログラミング
- VContainerによる依存性注入設計
- Photon Fusion2のベストプラクティスに従う
- エラーハンドリングとデバッグ情報の充実
- ネットワーク同期を考慮した設計

## 現在の開発状況
- **進捗**: フェーズ2（ゲームプレイ実装）進行中
- **完了機能**: 基盤システム、ネットワーク、プレイヤーシステム、DI基盤
- **実装中**: 敵システム、戦闘システム、ウェーブ管理
- **今後**: 砲台システム、防御システム、アップグレードシステム

alwaysApply: false
---
