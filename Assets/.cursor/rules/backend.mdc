---
alwaysApply: true
---
# FPS協力防衛ゲーム プロジェクト構造

## プロジェクト概要
- **ジャンル**: FPS視点の3Dオンライン協力防衛ゲーム
- **プレイ人数**: 1～4人（マルチプレイヤー対応）
- **プラットフォーム**: Unity + C#
- **技術スタック**: R3, VContainer, UniTask, HDRP, Photon Fusion2

## ディレクトリ構造と機能

### Scripts/ - メインロジック
プロジェクトのコア機能を担当するスクリプト群

#### Character/ - キャラクター関連
- **Camera/**: カメラシステム
  - `PlayerAvatarView.cs`: Cinemachineカメラの優先度制御
- **Input/**: 入力システム
  - `InputManager.cs`: Unity Input Systemを使用したプレイヤー入力管理
  - `GameInput.cs`: 自動生成された入力アクション
  - `PlayerNetworkInput.cs`: ネットワーク入力構造体定義
- **Pys/**: 物理・移動システム
  - `PlayerMovement.cs`: ネットワーク対応プレイヤー移動制御
  - `PlayerMove.cs`: 基本移動機能
  - `PlayerJump.cs`: ジャンプ機能
  - `RotationMove.cs`: 回転制御
  - `PlayerPhysicsMove.cs`: 物理演算対応移動
- `PlayerAvatar.cs`: メインプレイヤーアバターコントローラー
- `ISetPlayerInformation.cs`: プレイヤー情報設定インターフェース

#### NetWork/ - ネットワーク機能
- `GameLauncher.cs`: Photon Fusionセッション管理とプレイヤー接続制御
- `PhotonConnectionTest.cs`: 接続テスト機能

#### InteractObjectScripts/ - インタラクションシステム
戦艦内設備操作のためのインタラクション機能
- `BaseInteractObject.cs`: インタラクト可能オブジェクトの基底クラス
- `BaseInteractButtonObject.cs`: ボタン型インタラクトオブジェクト
- `IInteractableControllable.cs`: 操縦可能オブジェクトのインターフェース

#### Utility/ - ユーティリティ
- `TransformCalculation.cs`: カメラ基準の移動方向計算

#### SubEditor/ - エディター拡張
- `RequiredAttribute.cs`: 必須フィールド検証属性

### Scene/ - シーン
- `NetWorkTest.unity`: ネットワーク機能テストシーン
- `OutdoorsScene.unity`: メインゲームシーン

### Prefab/ - プレハブ
- `PlayerAvatar.prefab`: プレイヤーアバタープレハブ
- `NetWorkRunner.prefab`: ネットワークランナープレハブ

### Photon/ - Photon Fusion2関連
Photon Fusion2の機能とアセット
- **Fusion/**: メインライブラリ
  - **Runtime/**: ランタイムライブラリ
  - **Editor/**: エディター拡張
  - **Resources/**: ネットワーク設定ファイル
- **FusionDemos/**: サンプルコード
- **FusionMenu/**: メニューシステム

### Packages/ - 外部ライブラリ
主要な依存パッケージ
- **R3.1.3.0/**: リアクティブプログラミングライブラリ
- **ObservableCollections.3.3.3/**: 観測可能コレクション
- **Microsoft.Bcl.AsyncInterfaces.6.0.0/**: 非同期インターフェース

### Settings/ - プロジェクト設定
- **HDRP設定**: HDRP Balanced, HDRP High Fidelity
- **HDRPDefaultResources/**: デフォルトリソース

### Editor/ - エディター機能
- `AutoSave.cs`: 自動保存機能
- `Attribute.cs`: カスタム属性定義

## 主要機能

### ネットワーク機能
- Photon Fusion2を使用したマルチプレイヤー対応
- ホスト/クライアントモード対応
- プレイヤー参加/退出処理
- ネットワーク入力同期

### プレイヤーシステム
- FPS視点でのキャラクター操作
- カメラ基準の移動制御
- ジャンプ機能
- ネットワーク同期されたアバター

### 入力システム
- Unity Input Systemベース
- キーボード・マウス、ゲームパッド対応
- ネットワーク入力として統合

### インタラクションシステム
- 戦艦内設備との相互作用
- 砲台操縦、シールド操作等のベース機能

## 開発方針
- var型の使用を避ける
- 適切な粒度でのメソッド分割
- リーダブルコードの原則に従う
- 各行にコメント記述、関数にsummary記述
- 既存コード設計の一貫性を保つ
description:
globs:
alwaysApply: false
---
